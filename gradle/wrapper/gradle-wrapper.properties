#Tue May 16 09:17:02 CST 2023
"Channel=human readable title",
(NotificationManager)=getSystemService(Context.NOTIFICATION_SERVICE);
*/=
.bigPicture(picture))=
.setAutoCancel(true)=
.setContentIntent(pendingIntent).build();=
.setContentIntent(resultPendingIntent);=
.setContentText(message)=
.setContentText(messageText)=
.setContentTitle(title)=
.setDefaults(Notification.DEFAULT_VIBRATE=| Notification.DEFAULT_SOUND | Notification.FLAG_SHOW_LIGHTS)
.setLargeIcon(bitmap)=
.setLights(Color.WHITE,=300, 300)
.setLights(Color.WHITE,300,300)=
.setPriority(Notification.PRIORITY_DEFAULT)=
.setSmallIcon(R.drawable.store_icon)=
.setSound(defaultSoundUri)=
.setStyle(new=NotificationCompat.BigPictureStyle()
.setSubText(subText)=
.setSummaryText(message)=
/*=
//=Transaction completed
//((Activity)=getBaseContext()).getWindow().setAttributes(params);
//Log.i("Notification=\=\=> ", "Activity\:  " + tasks.get(0).getTaskInfo().baseActivity);
//NotificationManagerCompat=notificationManager \= NotificationManagerCompat.from(getApplicationContext());
//Toast.makeText(PromotionActivity.this,="Version\: " + Build.VERSION.SDK_INT, Toast.LENGTH_SHORT).show();
//Uri=pic \= remoteMessage.getNotification().getImageUrl();      need  SLL security  Web site
//WindowManager.LayoutParams=params \= ((Activity) getBaseContext()).getWindow().getAttributes();
//if=(pic \!\= null) {
//notification.defaults=|\= Notification.DEFAULT_LIGHTS;
//params.screenBrightness=1;
//resultIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP=| Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
//userRef.child("token").child(key).setValue(new=UserItem(refreshedToken, dbUserEmail, dbUserName));
//}=
@Override=
ActivityManager=am \= (ActivityManager)getSystemService(Context.ACTIVITY_SERVICE);
Bitmap=bitmap \= BitmapFactory.decodeResource(getResources(), R.drawable.store_icon);
Bundle=bundle \= new Bundle();
ByteArrayOutputStream=baos \=  new  ByteArrayOutputStream();
Cursor=cursor \= dbhelper.getSimpleUserData();
DataSnapshot=dataSnapshot) {
FirebaseDatabase=db \= FirebaseDatabase.getInstance();
FirebaseMessaging.getInstance().getToken().addOnCompleteListener(new=OnCompleteListener<String>() {
HttpURLConnection=connection \= (HttpURLConnection) url.openConnection();
InputStream=input \= connection.getInputStream();
Integer=counter \= mutableData.getValue(Integer.class);
Intent=resultIntent \= new Intent(this, ProductActivity.class);
Iterable<MutableData>=tokenChildren \= tokenSnapshot.getChildren();
List<ActivityManager.AppTask>=tasks \= am.getAppTasks();
Log.d("user=", c.getUserToken() + "  " + c.getUserEmail() + "  " + c.getUserName());
Log.i("Exception=\=> ",  e.getClass().toString());
Log.i("Firebase=\=>", "Total User Amount is\: " + totalUserAmount);
Log.i("InstanceId=\=\=> ", "refresh token\: "+refreshedToken);
Log.i("Messaging=\=\=> ", "Message Notification Body\:  "+remoteMessage.getNotification().getBody());
Log.i("Pick=image timeout\: " , "reload data.");
Log.i("runTransaction=saved\: ", "successfully \!");
Log.i("updateChildren=saved\: ", "successfully \!");
Map<String,=Object> userUpdates \= new HashMap<>();
MutableData=tokenSnapshot \= mutableData.child("token");
Notification=notification \=
NotificationChannel=channel \= new NotificationChannel(channelId,
NotificationCompat.Builder=notificationBuilder \=
NotificationManager=notificationManager \=
NotificationManager.IMPORTANCE_DEFAULT);=
PendingIntent=pendingIntent;
PendingIntent.FLAG_UPDATE_CURRENT);=
PowerManager=pm \= (PowerManager)getSystemService(Context.POWER_SERVICE);
PowerManager.WakeLock=wl \= pm.newWakeLock(PowerManager.FULL_WAKE_LOCK | PowerManager.ACQUIRE_CAUSES_WAKEUP | PowerManager.ON_AFTER_RELEASE, "Store3C\:ScreenLockNotificationTag");
String=key \= userTokenRef.child("token").push().getKey();
TaskStackBuilder=stackBuilder \= TaskStackBuilder.create(this);
Toast.makeText(PromotionFirebaseMessagingService.this,="DatabaseError\: " + databaseError.getMessage(), Toast.LENGTH_SHORT).show();
URL=url \= new URL(imageUrl);
Uri=defaultSoundUri\= RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
UserItem=newUser \= new UserItem(userId, refreshedToken, dbUserEmail, dbUserName);
bm.compress(Bitmap.CompressFormat.PNG,=100 , baos);
boolean=findToken \= false;
bundle.putByteArray("Pic",=Bitmap2Bytes(picture));
bundle.putString("Intro",=messageIntro);
bundle.putString("Name",=message);
bundle.putString("Notification",="NOTIFICATION");
bundle.putString("Price",=messagePrice);
catch=(Exception e) {
channel.enableLights(true);=
connection.setDoInput(true);=connection.connect();
db.setPersistenceEnabled(true);=
dbUserEmail=cursor.getString(2);
dbUserName=cursor.getString(1);
dbhelper=new AccountDbAdapter(PromotionFirebaseMessagingService.this);
dbhelper.close();=
distributionUrl=https\://services.gradle.org/distributions/gradle-7.3.3-bin.zip
e.printStackTrace();=
else={
final=DatabaseReference totalTokenRef;
findToken=true;
for=(MutableData token \: tokenChildren) {
if=(databaseError \!\= null) {
imageUrl=data.get("imagePath");
import=static com.example.user.store3c.MainActivity.setFirebaseDbPersistence;
int=notificationId \= new Random().nextInt(60000);
intent.addFlags(Intent.FLAG_ACTIVITY_MULTIPLE_TASK);=
intent.putExtras(bundle);=
message=remoteMessage.getNotification().getBody();
messageIntro="\u9999\u5674\u5674\u7684\u96DE\u8089\u98EF\uFF0C\u5403\u4E86\u4EE5\u5F8C\u8B93\u4EBA\u518D\u4E09\u7684\u56DE\u5473\!";
messagePrice="80\u5143";
messageText=data.get("messageText");
messageType=data.get("messageType");
mutableData.setValue(++totalUserAmount);=
mutableData.setValue(totalUserAmount);=
new=NotificationCompat.Builder(this, channelId)
notification.bigContentView.setViewVisibility(smallIconId,=View.INVISIBLE);
notification.contentView.setViewVisibility(smallIconId,=View.INVISIBLE);
notification.flags=|\= Notification.FLAG_SHOW_LIGHTS;
notification.ledARGB=Color.WHITE;
notification.ledOffMS=300;
notification.ledOnMS=300;
notificationManager.createNotificationChannel(channel);=
notificationManager.notify(notificationId=/* ID of notification */, notification);
orderMessageText="    " + messageText;
package=com.example.user.store3c;
pendingIntent=stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);
picture=getBitmapfromUrl(imageUrl);
private=byte [] Bitmap2Bytes(Bitmap bm){
public=PromotionFirebaseMessagingService() {
refreshedToken=task.getResult();
resultIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP=| Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
resultIntent.putExtras(bundle);=
return=baos.toByteArray();
setFirebaseDbPersistence=true;
stackBuilder.addNextIntent(resultIntent);=
stackBuilder.getPendingIntent(0,=PendingIntent.FLAG_UPDATE_CURRENT);
subText=data.get("subText");
super();=
super.onNewToken(s);=
title=remoteMessage.getNotification().getTitle();
totalTokenRef=userTokenRef.child("AppTokenAmount").getRef();
totalTokenRef.keepSynced(true);=
totalTokenRef.runTransaction(new=Transaction.Handler() {
totalUserAmount=counter;
totalUserAmount++;=
try={
userTokenRef=db.getReference("userToken");
userTokenRef.keepSynced(true);=
userTokenRef.updateChildren(userUpdates,=new DatabaseReference.CompletionListener() {
userUpdates.put("/token/"=+ key, userValues);
wl.acquire(30000);=
wl.release();=
}=
});=
